#!/usr/bin/env perl
package Dotfile;
use Carp qw( croak );
use File::Basename qw( basename );
use File::Spec::Functions qw( rel2abs );

sub new {
    my $self  = shift;
    bless { @_ }, ref $self || $self;
}

sub source {
    my $self = shift;
    return $self->{source};
}

sub destination {
    my $self = shift;
    my $name = basename $self->source;
    $name =~ s/^_/./;
    $name =~ s/\.TEMPLATE$//;
    return "$ENV{HOME}/$name";
}

sub is_templated {
    my $self = shift;
    return $self->source =~ /\.TEMPLATE$/;
}

sub install_symlink {
    my $self = shift;
    if (-l $self->destination) {
        unlink $self->destination;
    }
    symlink rel2abs( $self->source ), rel2abs( $self->destination )
        or croak "symlink: $!";
}

sub install_template {
    my $self = shift;
    my $stage = $self->destination . ".$$";

    require Template;
    my $tt = Template->new;
    $tt->process( $self->source, { env => \ %ENV }, $stage )
        or croak $tt->error;

    if (-f $self->destination) {
        system 'diff', '-u', $self->destination, $stage;
        unlink $self->destination;
    }
    rename $stage, $self->destination;
}

sub install {
    my $self = shift;
    my $src  = $self->source;
    my $dest = $self->destination;
    print "$src => $dest\n";

    $self->is_templated ? $self->install_template : $self->install_symlink;
}


for my $source (@ARGV) {
    Dotfile->new( source => $source )->install;
}
