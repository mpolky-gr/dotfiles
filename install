#!/usr/bin/env perl
package Dotfile;
use Carp qw( croak );
use Moose;
use MooseX::Types::Path::Class;
use Template;

has 'source' => (
    is     => 'ro',
    isa    => 'Path::Class::File',
    coerce => 1,
);

sub destination {
    my $self = shift;
    my $name = $self->source->basename;
    $name =~ s/^_/./;
    $name =~ s/\.TEMPLATE$//;
    return Path::Class::file("$ENV{HOME}/$name");
}

sub is_templated {
    my $self = shift;
    return $self->source =~ /\.TEMPLATE$/;
}

sub install_symlink {
    my $self = shift;
    if (-l $self->destination) {
        $self->destination->remove;
    }
    symlink $self->source->absolute, $self->destination->absolute
        or croak "symlink: $!";
}

sub install_template {
    my $self = shift;
    my $stage = $self->destination . ".$$";

    my $tt = Template->new;
    $tt->process( $self->source.'', { env => \ %ENV }, $stage )
        or croak $tt->error;

    if (-f $self->destination) {
        system 'diff', '-u', $self->destination, $stage;
        $self->destination->remove;
    }
    rename $stage, $self->destination;
}

sub install {
    my $self = shift;
    my $src  = $self->source;
    my $dest = $self->destination;
    print "$src => $dest\n";

    $self->is_templated ? $self->install_template : $self->install_symlink;
}


for my $source (@ARGV) {
    Dotfile->new( source => $source )->install;
}
